 
==== testing_rt ====
sizeof(rt::TypeTraits<MyType>::t_Val) = 8
rt::TypeTraits<MyType>::IsPOD = 1
sizeof(rt::TypeTraits<MyTypeTR>::t_Val) = 8
rt::TypeTraits<MyTypeTR>::IsPOD = 0
sizeof(BYTE)	=1
sizeof(WORD)	=2
sizeof(DWORD)	=4
sizeof(UINT)	=4
sizeof(QWORD)		=8
sizeof(LONGLONG)	=8
sizeof(ULONGLONG)	=8
sizeof(QWORD)		=8
rt::MaxPower2Within(2049): 2048
rt::Swap: <a, b> = <2,1>
rt::SwitchByteOrder(CEFABEBA00000000) = 00000000BABEFACE
int is POD: 1
int[24] is POD: 1
rt::IsTypeSame<int,int>: 1
rt::IsTypeSame<int,float>: 0
rt::IsTypeSame<const int,int>: 0
rt::Remove_QualiferAndRef<const int>: 1
rt::TypeTraits<int[23]>::t_Element: 1
rt::NumericTraits<double>::IsFloat: 1
rt::NumericTraits<float>::IsUnsigned: 0
 
==== testing_buffer ====
Init: {0,0,123}
Copy: {0,0,123}
push: {12,0,0,123,456,789}
erase: {12,123,456,789}
insert: {12,100,100,100,123,456,789}
insert: {12,200,100,100,100,123,456,789}
sort: {12,100,100,100,123,200,456,789}
hello
is
shit
world
Overflow
1234567890
123456789
12345678
Strings: {"string0","string1","string2"}
Strings copied: {"string0","string1","string2","string3"}
 
==== testing_string_conv ====
12
12
123
123
123.45
123.4500
1.2300e+45
1.2300e+45
inf
 
==== testing_string ====
123📢好的 456
123好的 456
int i=110; i/=2;
_LOG("/*some comment*/");
i += 32;
i++; 
_LOG("//some conmment");
i+=222;
--\'\"--\\\\*\\9
--\'\"--\\\\*\\9
--'"--\\*\9
--'"--\\*\9
<div class=\"tabBody3 tabContent\"><ul><li><a id=\"viewItemsMeasurements\" title=\"View this items measurements\" href=\"/am/pssizechart.nap?productID=511413\">View this item\'s measurements</a><br></li></ul><span><ul><li> Fits true to size, take your normal size</li><li> Cut for a loose fit</li><li> Mid-weight, slightly stretchy fabric</li><li>Model is 177cm/ 5\'10\" and is wearing a FR size 36 </li></ul></span></div>
/123/456/89/
/123/456/89
P:ftp , H:www.xxx.com , PATH:/124/rty.jpg
P: , H: , PATH:124/rty.jpg
P: , H: , PATH:rty.jpg
P: , H: , PATH:/124/rty.jpg
P:http , H:www.google.com , PATH:/
!?123456~
[-!?****123456~-]
[
c
a
trim_comments
TrimCodeComments
code
80
c->a
TrimCodeComments(code);80
c	->
a	*
trim_comments	.
TrimCodeComments	(
code	);
80	
GetNextLine(line, true)
"1"
"2"
GetNextLine(line, false)
"1"
""
"2"
""
""
""
abc
bcd
cde
de
abcde


abcde
cde
e


ab
abcde
abcde

de
abcde
abcde
abcd
abcd
hello world
a[2]: l
ToNumber: 123456
TrimLeft(2).ToNumber(num): 3456
SubStrHead(4).ToNumber(num): 1234
Split<>(','): 123,456,789 ,123$ddd 'yes "\'no',,,,
Split<>(" ,"): 123,456,789,,123$ddd,yes "\'no,,
Split<true>(" ,$"): 123,456,789,123,ddd,yes "\'no,,
Split<>(...): 345,453;546,4543,444,ddd,,,
hello world 1233 !!
String Expression 1: hello world 1233 !! ..
String Expression 2: worlld !!
Replace: wor===d !!
IsPrefixOf: 1
BinaryCString: \x31\x32\x33\x34\x35\x36
Binary: 313233343536
map["123"]: 456
Length of "123" + "\x0\x1\x3" is 6
FileSize<false,false>: 40.54 kB
FileSize<false,true>: 3.96 MB
FileSize<false,false>: 38.66 gB
FileSize<false,true>: 3775.63 TB
TimeSpan<true>: 0.010 second
TimeSpan<true>: 10 seconds
TimeSpan<true>: 1d:3h:46m:40s
TimeSpan<true>: 16d:7h:41m
TimeSpan<false>: 16d:7h:41m:0s
[{
"name":"jake",
"age": 12 
},{
"name":"mary",
"age": 7 
},1,false,"haha","@"]
Json Size: 522 = 522
{
"Key:Complex":"complex\" key",
"name":"this is name",
"sex":"a female",
"empty":"",
"alive": true ,
"age": 20 ,
"char":"C",
"phone": {
"number": 5235251 ,
"ext": 432 
} ,
"weight":"123.50kg",
"state": {
"paid": false ,
"lastshow":"2018/10/26"
} ,
"children": [{
"name":"jake",
"age": 12 
},{
"name":"mary",
"age": 7 
},1,false,"haha","@"] ,
"numbers": [1,2,"hello",{
"c": 1.2000 
},[3,"c",false],<7/InArray>,4.50] ,
"other": [{
"f0": 0 
},{
"f1": 1 
}] ,
"bin": <21/1234567890ABCDEFGHIJK> ,
"raw": null ,
"empty": [0] 
}
complex\" key
this is name
1234567890ABCDEFGHIJK

5235251
hello
1.2000
false
c
InArray
4.50
Key:Complex [string] = complex\" key
name [string] = this is name
sex [string] = a female
empty [null] = 
alive [bool] = true
age [number] = 20
char [string] = C
phone [object] = {
"number": 5235251 ,
"ext": 432 
}
weight [string] = 123.50kg
state [object] = {
"paid": false ,
"lastshow":"2018/10/26"
}
children [array] = [{
"name":"jake",
"age": 12 
},{
"name":"mary",
"age": 7 
},1,false,"haha","@"]
numbers [array] = [1,2,"hello",{
"c": 1.2000 
},[3,"c",false],<7/InArray>,4.50]
other [array] = [{
"f0": 0 
},{
"f1": 1 
}]
bin [binary] = 1234567890ABCDEFGHIJK
raw [null] = null
empty [array] = [0]
jake
mary




2
3
4
{ "a" : 1,
  "b" : "Yes",
  "c" : 5,
  "d" : 8.9}
Escaped String: \x00\t\\ABC\'\"123
Unescaped Matches: 1
{
"num": 100 
,
"arr": [0,1,"12"] ,
"str":"string"
,
"bin": <7/ABCDEFG> 
}
-9.8
-9.8
 
==== testing_xml ====
abcd & fff-<- ! ??
<?xml version="1.0" encoding="utf-8" ?>
<root name="testing" height="12.50">
    <item key="no">/*Some Inner Text*/</item>
    <item key="&lt;yes&gt;" height="12" />
    <item key="no">Another Node</item>
</root>
EnterXPath: /*Some Inner Text*/
key = no
mixed inner text: /*Some Inner Text*/ Another Node
<root> [ name="testing" height="12.50" ]
  <item> [ key="no" ]
  <item> [ key="&lt;yes&gt;" height="12" ]
  <item> [ key="no" ]
 
==== testing_file ====

test_(1).txt
test_(2).txt
test_(3).txt
test_(4).txt
test_(5).txt
test_(6).txt
test_(7).txt
test_(8).txt
test_(9).txt
File Content: Testing String wrote to file !!
File Remove: 1
File Remove: 0
2 => 123456
4097 => 12345678
4098 => 1234567
 
==== test_Precompiler ====

Precompiled:
val is 1
val is 1 for sure


Precompiled:
val is 2


Precompiled:
val is 3


Precompiled:
val > 3


Precompiled:

1>2?1:2
IT = "this is the value of IT"Values;
MultiLine = Line1 Line2 Line3;
MultiLine is Line1 Line2 MOOD-PC

ComSpec = C:\Windows\system32\cmd.exeC:SomeMissing
%NotClosed \Users\mood%%
MOOD-PC>12?MOOD-PC:12
Merged = "this is the value of IT" + Values
TT = 234
TT exists
End of File



Precompiled:

1>2?1:2
it = "this is the value of it" Values;
multiLine = Line1 Line2 Line3;
multiLine is Line1 Line2 MOOD-PC

comSpec = C:\Windows\system32\cmd.exe C: SomeMissing
MOOD-PC>12?MOOD-PC:12
Merged = "this is the value of it" + Values + HAHA234XIXI2>3?2:3WIWI
tt = 234
tt exists
it is defined
tt is fit
it is correct
End of File


 
==== testing_vm ====
1G VM: 1
100M File Mapping: 1
Write Head
Write Tail
 
==== testing_timedate ====
1980/03/02 12:21:33.321
1980/03/02 12:21:33.000
1980/03/02 12:21:00.000
1970/01/01 12:21:33.321
1970/01/01 12:21:33.000
1980/03/02 00:00:00.000
1970/01/01 12:21:00.000
1970/01/01 12:21:00.000
Day: 0 == 0
Day: 2 == 2
Timelapse: 5
2001/04/03 14:45:03.000
2011/07/13 01:00:00.000
FromInternetTimeFormat: 1994/11/15 12:45:26.000
ToInternetTimeFormat: Tue, 15 Nov 1994 04:45:26 GMT
LastMonth: 2011/12/01
Date32 diff 1: 0,0
Date32 diff 1: 1,-1
Date32 diff 1: 2,-2
Waiting for 2 seconds ...
